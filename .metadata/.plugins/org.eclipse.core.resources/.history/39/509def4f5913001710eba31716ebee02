package br.com.fiap.controller;

import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import br.com.fiap.beans.Cliente;
import br.com.fiap.beans.Despesa;
import br.com.fiap.beans.Processo;
import br.com.fiap.beans.TipoDespesa;
import br.com.fiap.bo.DespesaBO;
import br.com.fiap.bo.ProcessoBO;
import br.com.fiap.bo.TipoDespesaBO;

/**
 * Servlet implementation class ServletLCA
 * 
 * @author Grupo X
 * @see DespesaBO
 * @see Despesa
 * @version 1.0
 */
@WebServlet("/ServletLCA")
public class ServletLCA extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * 
	 * Instancia a Servelet
	 * 
	 * @see HttpServlet#HttpServlet()
	 */
	public ServletLCA() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * Redireciona as paginas JSP de acordo com o atributo "page" recebido no
	 * escopo do request.
	 * 
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub

		if (request.getParameter("page").equals("lancarDespesa.jsp")) {
			ProcessoBO bo = new ProcessoBO();
			TipoDespesaBO tdBO = new TipoDespesaBO();
			try {
				request.setAttribute("objProcesso",
				bo.buscaProcesso(Integer.parseInt(request.getParameter("numeroProcesso"))));
				request.setAttribute("tipoDespesa", tdBO.buscarDespesa());
				request.setAttribute("page", request.getParameter("page"));
				request.setAttribute("msgTitulo", "Lançar Despesa");
				request.getRequestDispatcher("index.jsp").forward(request, response);
			} catch (NumberFormatException e) {
				request.setAttribute("msgBox", "Ocorreu um erro!");
				request.setAttribute("page", "resultado.jsp");
				request.getRequestDispatcher("index.jsp").forward(request, response);
				e.printStackTrace();
			} catch (ClassNotFoundException e) {
				request.setAttribute("msgBox", "Ocorreu um erro!");
				request.setAttribute("page", "resultado.jsp");
				request.getRequestDispatcher("index.jsp").forward(request, response);
				e.printStackTrace();
			} catch (SQLException e) {
				request.setAttribute("msgBox", "Ocorreu um erro com o banco de dados!");
				request.setAttribute("e", e);
				request.setAttribute("page", "resultado.jsp");
				request.getRequestDispatcher("index.jsp").forward(request, response);
				e.printStackTrace();
			}

		} else if (request.getParameter("page").equals("listarDespesa.jsp")) {

			listarDespesa(request, response);

		}

		else if (request.getParameter("page").equals("lancarHonorarios.jsp")) {
			request.setAttribute("page", request.getParameter("page"));
			request.setAttribute("msgTitulo", "Lançar Honorário");
			request.getRequestDispatcher("index.jsp").forward(request, response);
		} else if (request.getParameter("page").equals("listarProcessos.jsp")) {
			request.setAttribute("page", request.getParameter("page"));
			request.setAttribute("msgTitulo", "Listar Processos");
			request.getRequestDispatcher("index.jsp").forward(request, response);
		} else {
			request.setAttribute("page", request.getParameter("page"));
			request.getRequestDispatcher("index.jsp").forward(request, response);
		}

	}

	/**
	 * Este metodo cria um objeto lista com todas as despesas a partrir do
	 * numero de processo e encaminha o resultado para a pagina com o parametro
	 * "page"
	 * 
	 * @see DespesaBO
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	private void listarDespesa(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		DespesaBO bo = new DespesaBO();

		try {

			request.setAttribute("objDespesa",
			bo.pesquisaAll(Integer.parseInt(request.getParameter("numeroProcesso"))));

			request.setAttribute("page", request.getParameter("page"));
			request.setAttribute("msgTitulo", "Listar Despesas");
			request.getRequestDispatcher("index.jsp").forward(request, response);
		} catch (NumberFormatException e) {
			request.setAttribute("msgBox", "Ocorreu um erro!");
			request.setAttribute("page", "resultado.jsp");
			request.getRequestDispatcher("index.jsp").forward(request, response);
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			request.setAttribute("msgBox", "Ocorreu um erro!");
			request.setAttribute("page", "resultado.jsp");
			request.getRequestDispatcher("index.jsp").forward(request, response);
			e.printStackTrace();
		} catch (SQLException e) {
			request.setAttribute("msgBox", "Ocorreu um erro com o banco de dados!");
			request.setAttribute("e", e);
			request.setAttribute("page", "resultado.jsp");
			request.getRequestDispatcher("index.jsp").forward(request, response);
			e.printStackTrace();
		}
	}

	/**
	 * Metodo nativo doPost da Servelet
	 * 
	 * Encaminha para os metodos listaProcesso ou lancaDespesa dependendo do
	 * valor recebiro no parametro "page"
	 * 
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		if (request.getParameter("origem").equals("listarProcesso")) {
			try {
				listaProcesso(request, response);
			} catch (ParseException e) {
				request.setAttribute("msgBox", "Ocorreu um erro!");
				request.setAttribute("page", "resultado.jsp");
				request.getRequestDispatcher("index.jsp").forward(request, response);
				e.printStackTrace();
			}
		} else if (request.getParameter("origem").equals("lancarDespesa")) {
			lancaDespesa(request, response);

		}
	}

	/**
	 * Este metodo recebe os atributos da pagina lancarDespesa.jsp referentes ao
	 * lancamento. Os atributos sao enviados para o metodo bo.insere() para que
	 * sejam encaminhados ao registro no banco de dados.
	 * 
	 * @see DespesaBO
	 * @see DespesaDAO
	 * @see Despesa
	 * @see Processo
	 * @see Cliente
	 * @see TipoDespesa
	 */
	private void lancaDespesa(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		Processo p = new Processo();
		p.setNrProcesso(Integer.parseInt(request.getParameter("nrProc")));

		Cliente c = new Cliente();
		c.setRazaoSocial("nomecliente");
		p.setCliente(c);

		Despesa d = new Despesa();

		TipoDespesa td = new TipoDespesa();
		td.setCdDespesa(Integer.parseInt(request.getParameter("tipoDespesa")));

		d.setTipoDespesa(td);
		d.setDtDespesa(request.getParameter("dataOcr"));
		d.setValor(Double.parseDouble(request.getParameter("valorDespesa")));
		d.setObservacao(request.getParameter("observacao"));
		d.setProcesso(p);
		p.setCliente(c);

		DespesaBO bo = new DespesaBO();

		try {
			bo.insere(d);
			request.setAttribute("msgBox", "Despesa registrada com sucesso!");
			request.setAttribute("page", "resultado.jsp");
			request.getRequestDispatcher("index.jsp").forward(request, response);
		} catch (ClassNotFoundException | SQLException e) {
			request.setAttribute("msgBox", "Ocorreu um erro!");
			request.setAttribute("page", "resultado.jsp");
			request.getRequestDispatcher("index.jsp").forward(request, response);
			e.printStackTrace();
		}

	}

	/**
	 * Envia para pagina listarProcessos.jsp todos os processos selecionados de
	 * acordo com o critério de busca desejado na pagina, atraves do retorno dos
	 * metodos bo.buscaProcesso(int p), bo.buscaProcesso(String d),
	 * bo.buscaProcesso(String DataIni, String DataFim). todas as assinaturas
	 * bo.buscaProcesso retornam uma Lista do tipo processo.
	 * 
	 * @see DespesaBO
	 * @see Despesa
	 * @see Processo
	 * @see Cliente
	 * @see TipoDespesa
	 */
	private void listaProcesso(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException, ParseException {

		ProcessoBO bo = new ProcessoBO();
		request.setAttribute("msgTitulo", "Listar Processos");

		try {
			if ((request.getParameter("numeroProcesso").isEmpty() == false)) {
				request.setAttribute("objProcesso",
						bo.buscaProcesso(Integer.parseInt(request.getParameter("numeroProcesso"))));
				request.setAttribute("page", "listarProcessos.jsp");
			} else if (request.getParameter("razaoSocial").isEmpty() == false) {
				request.setAttribute("objProcesso",
						bo.buscaProcesso(request.getParameter("razaoSocial").toUpperCase()));
				request.setAttribute("page", "listarProcessos.jsp");
			} else if (request.getParameter("dataInicio").isEmpty() == false
					&& request.getParameter("dataFim").isEmpty() == false) {
				request.setAttribute("objProcesso",
						bo.buscaProcesso(request.getParameter("dataInicio"), request.getParameter("dataFim")));
				request.setAttribute("page", "listarProcessos.jsp");
			}
		} catch (ClassNotFoundException | SQLException e) {
			request.setAttribute("msgBox", "Ocorreu um erro com o banco de dados!");
			request.setAttribute("e", e);
			request.setAttribute("page", "resultado.jsp");
		} finally {
			request.getRequestDispatcher("index.jsp").forward(request, response);
		}

	}

}
